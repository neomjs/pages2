{"classData":[{"comment":"/**\n * @class Neo.util.Function\n * @extends Neo.core.Base\n */","meta":{"filename":"Function.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{}},"kind":"class","name":"Function","augments":["Neo.core.Base"],"memberof":"Neo.util","longname":"Neo.util.Function","scope":"static","$longname":"Neo.util.Function","$kind":"class","id":3699,"neoClassName":"Neo.util.Function"},{"comment":"/**\n         * @member {String} className='Neo.util.Function'\n         * @protected\n         */","meta":{"filename":"Function.mjs","lineno":13,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.util.Function'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":3700,"neoClassName":"Neo.util.Function"},{"comment":"/**\n     * Append args instead of prepending them\n     * @param {Object} scope\n     * @returns {Function}\n     */","meta":{"range":[439,668],"filename":"Function.mjs","lineno":21,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{"id":"astnode100115689","name":"NeoFunction.bindAppend","type":"MethodDefinition","paramnames":["scope"]},"vars":{"":null}},"description":"Append args instead of prepending them","params":[{"type":{"names":["Object"]},"name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"bindAppend","longname":"NeoFunction.bindAppend","kind":"function","memberof":"NeoFunction","scope":"static","$longname":"NeoFunction.bindAppend","$kind":"method","id":3701,"neoClassName":"Neo.util.Function"},{"comment":"/**\n     * Intended for functions with 1 param where the interceptor can change the value\n     * @param {Object} target\n     * @param {String} targetMethodName\n     * @param {Function} interceptFunction\n     * @param {Object} scope=target\n     * @returns {Function}\n     */","meta":{"range":[952,1257],"filename":"Function.mjs","lineno":38,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{"id":"astnode100115731","name":"NeoFunction.createInterceptor","type":"MethodDefinition","paramnames":["target","targetMethodName","interceptFunction","scope"]},"vars":{"":null}},"description":"Intended for functions with 1 param where the interceptor can change the value","params":[{"type":{"names":["Object"]},"name":"target"},{"type":{"names":["String"]},"name":"targetMethodName"},{"type":{"names":["function"]},"name":"interceptFunction"},{"type":{"names":["Object"]},"defaultvalue":"target","name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"createInterceptor","longname":"NeoFunction.createInterceptor","kind":"function","memberof":"NeoFunction","scope":"static","$longname":"NeoFunction.createInterceptor","$kind":"method","id":3702,"neoClassName":"Neo.util.Function"},{"comment":"/**\n     * @param {Neo.core.Base} target\n     * @param {String} methodName\n     * @param {Function} fn\n     * @param {Object} scope\n     * @returns {Function}\n     */","meta":{"range":[1434,1711],"filename":"Function.mjs","lineno":53,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{"id":"astnode100115767","name":"NeoFunction.createSequence","type":"MethodDefinition","paramnames":["target","methodName","fn","scope"]},"vars":{"":null}},"params":[{"type":{"names":["Neo.core.Base"]},"name":"target"},{"type":{"names":["String"]},"name":"methodName"},{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["Object"]},"name":"scope"}],"returns":[{"type":{"names":["function"]}}],"name":"createSequence","longname":"NeoFunction.createSequence","kind":"function","memberof":"NeoFunction","scope":"static","$longname":"NeoFunction.createSequence","$kind":"method","id":3703,"neoClassName":"Neo.util.Function"},{"comment":"/**\n     * The interceptor can prevent the targetMethod from getting executed in case it returns false.\n     * @param {Object} target\n     * @param {String} targetMethodName\n     * @param {Function} interceptFunction\n     * @param {Object} scope=target\n     * @param {*} preventedReturnValue=null The value to return in case the interceptFunction returns false\n     * @returns {Function}\n     */","meta":{"range":[2117,2521],"filename":"Function.mjs","lineno":71,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-shared-offscreen-canvas-demo/node_modules/neo.mjs/src/util","code":{"id":"astnode100115808","name":"NeoFunction.intercept","type":"MethodDefinition","paramnames":["target","targetMethodName","interceptFunction","scope","preventedReturnValue"]},"vars":{"":null}},"description":"The interceptor can prevent the targetMethod from getting executed in case it returns false.","params":[{"type":{"names":["Object"]},"name":"target"},{"type":{"names":["String"]},"name":"targetMethodName"},{"type":{"names":["function"]},"name":"interceptFunction"},{"type":{"names":["Object"]},"defaultvalue":"target","name":"scope"},{"type":{"names":["*"]},"defaultvalue":null,"description":"The value to return in case the interceptFunction returns false","name":"preventedReturnValue"}],"returns":[{"type":{"names":["function"]}}],"name":"intercept","longname":"NeoFunction.intercept","kind":"function","memberof":"NeoFunction","scope":"static","$longname":"NeoFunction.intercept","$kind":"method","id":3704,"neoClassName":"Neo.util.Function"}]}