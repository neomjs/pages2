"use strict";
(self["webpackChunkmainapp"] = self["webpackChunkmainapp"] || []).push([["node_modules_neo_mjs_src_main_addon_ServiceWorker_mjs"],{

/***/ "./node_modules/neo.mjs/src/main/addon/ServiceWorker.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/neo.mjs/src/main/addon/ServiceWorker.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Base.mjs */ "./node_modules/neo.mjs/src/core/Base.mjs");
/* harmony import */ var _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../worker/Manager.mjs */ "./node_modules/neo.mjs/src/worker/Manager.mjs");



/**
 * Creates a ServiceWorker instance, in case Neo.config.useServiceWorker is set to true
 * @class Neo.main.addon.ServiceWorker
 * @extends Neo.core.Base
 * @singleton
 */
class ServiceWorker extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.main.addon.ServiceWorker'
         * @protected
         */
        className: 'Neo.main.addon.ServiceWorker',
        /**
         * @member {Boolean} singleton=true
         * @protected
         */
        singleton: true
    }}

    /**
     * @param {Object} config
     */
    construct(config) {
        if ('serviceWorker' in navigator) {
            let me            = this,
                config        = Neo.config,
                devMode       = config.environment === 'development',
                fileName      = devMode ? 'ServiceWorker.mjs' : 'serviceworker.js',
                folder        = window.location.pathname.includes('/examples/') ? 'examples/' : 'apps/',
                opts          = devMode ? {type: 'module'} : {},
                path          = (devMode ? config.basePath : config.workerBasePath) + (devMode ? folder : '') + fileName,
                serviceWorker = navigator.serviceWorker;

            window.addEventListener('beforeunload', me.onBeforeUnload.bind(me));

            serviceWorker.register(path, opts)
                .then(registration => {
                    serviceWorker.ready.then(() => {
                        serviceWorker.onmessage = _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].onWorkerMessage.bind(_worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]);

                        _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].sendMessage('service', {
                            action: 'registerNeoConfig',
                            data  : config
                        });
                    });
                })
        }
    }

    /**
     *
     */
    onBeforeUnload() {
        _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].sendMessage('service', {
            action: 'unregisterPort'
        });
    }
}

Neo.applyClassConfig(ServiceWorker);

let instance = Neo.create(ServiceWorker);

Neo.applyToGlobalNs(instance);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL21haW4vbm9kZV9tb2R1bGVzX25lb19tanNfc3JjX21haW5fYWRkb25fU2VydmljZVdvcmtlcl9tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ0s7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixzREFBSTtBQUNoQyx3QkFBd0I7QUFDeEI7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZ0JBQWdCLElBQUk7QUFDL0Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsZ0ZBQWtDLENBQUMsMkRBQWE7O0FBRWxHLHdCQUF3Qix1RUFBeUI7QUFDakQ7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVFQUF5QjtBQUNqQztBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLGlFQUFlLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21haW5hcHAvLi9ub2RlX21vZHVsZXMvbmVvLm1qcy9zcmMvbWFpbi9hZGRvbi9TZXJ2aWNlV29ya2VyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZSAgICAgICAgICBmcm9tICcuLi8uLi9jb3JlL0Jhc2UubWpzJztcbmltcG9ydCBXb3JrZXJNYW5hZ2VyIGZyb20gJy4uLy4uL3dvcmtlci9NYW5hZ2VyLm1qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFNlcnZpY2VXb3JrZXIgaW5zdGFuY2UsIGluIGNhc2UgTmVvLmNvbmZpZy51c2VTZXJ2aWNlV29ya2VyIGlzIHNldCB0byB0cnVlXG4gKiBAY2xhc3MgTmVvLm1haW4uYWRkb24uU2VydmljZVdvcmtlclxuICogQGV4dGVuZHMgTmVvLmNvcmUuQmFzZVxuICogQHNpbmdsZXRvblxuICovXG5jbGFzcyBTZXJ2aWNlV29ya2VyIGV4dGVuZHMgQmFzZSB7XG4gICAgc3RhdGljIGdldENvbmZpZygpIHtyZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQG1lbWJlciB7U3RyaW5nfSBjbGFzc05hbWU9J05lby5tYWluLmFkZG9uLlNlcnZpY2VXb3JrZXInXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIGNsYXNzTmFtZTogJ05lby5tYWluLmFkZG9uLlNlcnZpY2VXb3JrZXInLFxuICAgICAgICAvKipcbiAgICAgICAgICogQG1lbWJlciB7Qm9vbGVhbn0gc2luZ2xldG9uPXRydWVcbiAgICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICAgKi9cbiAgICAgICAgc2luZ2xldG9uOiB0cnVlXG4gICAgfX1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWdcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3QoY29uZmlnKSB7XG4gICAgICAgIGlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG4gICAgICAgICAgICBsZXQgbWUgICAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgICAgICAgY29uZmlnICAgICAgICA9IE5lby5jb25maWcsXG4gICAgICAgICAgICAgICAgZGV2TW9kZSAgICAgICA9IGNvbmZpZy5lbnZpcm9ubWVudCA9PT0gJ2RldmVsb3BtZW50JyxcbiAgICAgICAgICAgICAgICBmaWxlTmFtZSAgICAgID0gZGV2TW9kZSA/ICdTZXJ2aWNlV29ya2VyLm1qcycgOiAnc2VydmljZXdvcmtlci5qcycsXG4gICAgICAgICAgICAgICAgZm9sZGVyICAgICAgICA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcygnL2V4YW1wbGVzLycpID8gJ2V4YW1wbGVzLycgOiAnYXBwcy8nLFxuICAgICAgICAgICAgICAgIG9wdHMgICAgICAgICAgPSBkZXZNb2RlID8ge3R5cGU6ICdtb2R1bGUnfSA6IHt9LFxuICAgICAgICAgICAgICAgIHBhdGggICAgICAgICAgPSAoZGV2TW9kZSA/IGNvbmZpZy5iYXNlUGF0aCA6IGNvbmZpZy53b3JrZXJCYXNlUGF0aCkgKyAoZGV2TW9kZSA/IGZvbGRlciA6ICcnKSArIGZpbGVOYW1lLFxuICAgICAgICAgICAgICAgIHNlcnZpY2VXb3JrZXIgPSBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcjtcblxuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIG1lLm9uQmVmb3JlVW5sb2FkLmJpbmQobWUpKTtcblxuICAgICAgICAgICAgc2VydmljZVdvcmtlci5yZWdpc3RlcihwYXRoLCBvcHRzKVxuICAgICAgICAgICAgICAgIC50aGVuKHJlZ2lzdHJhdGlvbiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNlcnZpY2VXb3JrZXIucmVhZHkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlV29ya2VyLm9ubWVzc2FnZSA9IFdvcmtlck1hbmFnZXIub25Xb3JrZXJNZXNzYWdlLmJpbmQoV29ya2VyTWFuYWdlcik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFdvcmtlck1hbmFnZXIuc2VuZE1lc3NhZ2UoJ3NlcnZpY2UnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAncmVnaXN0ZXJOZW9Db25maWcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgIDogY29uZmlnXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgb25CZWZvcmVVbmxvYWQoKSB7XG4gICAgICAgIFdvcmtlck1hbmFnZXIuc2VuZE1lc3NhZ2UoJ3NlcnZpY2UnLCB7XG4gICAgICAgICAgICBhY3Rpb246ICd1bnJlZ2lzdGVyUG9ydCdcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5OZW8uYXBwbHlDbGFzc0NvbmZpZyhTZXJ2aWNlV29ya2VyKTtcblxubGV0IGluc3RhbmNlID0gTmVvLmNyZWF0ZShTZXJ2aWNlV29ya2VyKTtcblxuTmVvLmFwcGx5VG9HbG9iYWxOcyhpbnN0YW5jZSk7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3RhbmNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9