(self["webpackChunkmainapp"] = self["webpackChunkmainapp"] || []).push([["node_modules_d3fc_d3fc-extent_build_d3fc-extent_js-node_modules_d3-array_src_bisector_js-node-5c9b40"],{

/***/ "./node_modules/@d3fc/d3fc-extent/build/d3fc-extent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@d3fc/d3fc-extent/build/d3fc-extent.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports, __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js")) :
  0;
}(this, function (exports, d3Array) { 'use strict';

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  function linearExtent () {
    var accessors = [function (d) {
      return d;
    }];
    var pad = [0, 0];
    var padUnit = 'percent';
    var symmetricalAbout = null;
    var include = [];

    var instance = function instance(data) {
      var values = new Array(data.length);

      for (var _i = 0, _accessors = accessors; _i < _accessors.length; _i++) {
        var accessor = _accessors[_i];

        for (var i = 0; i < data.length; i++) {
          var value = accessor(data[i], i);

          if (Array.isArray(value)) {
            values.push.apply(values, _toConsumableArray(value));
          } else {
            values.push(value);
          }
        }
      }

      var extent = [d3Array.min(values), d3Array.max(values)];
      extent[0] = extent[0] == null ? d3Array.min(include) : d3Array.min([extent[0]].concat(_toConsumableArray(include)));
      extent[1] = extent[1] == null ? d3Array.max(include) : d3Array.max([extent[1]].concat(_toConsumableArray(include)));

      if (symmetricalAbout != null) {
        var halfRange = Math.max(Math.abs(extent[1] - symmetricalAbout), Math.abs(extent[0] - symmetricalAbout));
        extent[0] = symmetricalAbout - halfRange;
        extent[1] = symmetricalAbout + halfRange;
      }

      switch (padUnit) {
        case 'domain':
          {
            extent[0] -= pad[0];
            extent[1] += pad[1];
            break;
          }

        case 'percent':
          {
            var delta = extent[1] - extent[0];
            extent[0] -= pad[0] * delta;
            extent[1] += pad[1] * delta;
            break;
          }

        default:
          throw new Error("Unknown padUnit: ".concat(padUnit));
      }

      return extent;
    };

    instance.accessors = function () {
      if (!arguments.length) {
        return accessors;
      }

      accessors = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.pad = function () {
      if (!arguments.length) {
        return pad;
      }

      pad = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.padUnit = function () {
      if (!arguments.length) {
        return padUnit;
      }

      padUnit = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.include = function () {
      if (!arguments.length) {
        return include;
      }

      include = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.symmetricalAbout = function () {
      if (!arguments.length) {
        return symmetricalAbout;
      }

      symmetricalAbout = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    return instance;
  }

  function time () {
    var accessors = [];
    var pad = [0, 0];
    var padUnit = 'percent';
    var symmetricalAbout = null;
    var include = [];
    var extent = linearExtent();

    var valueOf = function valueOf(date) {
      return date != null ? date.valueOf() : null;
    };

    var instance = function instance(data) {
      var adaptedAccessors = accessors.map(function (accessor) {
        return function () {
          var value = accessor.apply(void 0, arguments);
          return Array.isArray(value) ? value.map(valueOf) : valueOf(value);
        };
      });
      extent.accessors(adaptedAccessors).pad(pad).padUnit(padUnit).symmetricalAbout(symmetricalAbout != null ? symmetricalAbout.valueOf() : null).include(include.map(function (date) {
        return date.valueOf();
      }));
      return extent(data).map(function (value) {
        return new Date(value);
      });
    };

    instance.accessors = function () {
      if (!arguments.length) {
        return accessors;
      }

      accessors = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.pad = function () {
      if (!arguments.length) {
        return pad;
      }

      pad = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.padUnit = function () {
      if (!arguments.length) {
        return padUnit;
      }

      padUnit = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.include = function () {
      if (!arguments.length) {
        return include;
      }

      include = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    instance.symmetricalAbout = function () {
      if (!arguments.length) {
        return symmetricalAbout;
      }

      symmetricalAbout = arguments.length <= 0 ? undefined : arguments[0];
      return instance;
    };

    return instance;
  }

  exports.extentDate = time;
  exports.extentLinear = linearExtent;
  exports.extentTime = time;

  Object.defineProperty(exports, '__esModule', { value: true });

}));


/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ascending)
/* harmony export */ });
function ascending(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ bisector)
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-array/src/descending.js");



function bisector(f) {
  let compare1, compare2, delta;

  // If an accessor is specified, promote it to a comparator. In this case we
  // can test whether the search value is (self-) comparable. We can’t do this
  // for a comparator (except for specific, known comparators) because we can’t
  // tell if the comparator is symmetric, and an asymmetric comparator can’t be
  // used to test whether a single value is comparable.
  if (f.length !== 2) {
    compare1 = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    compare2 = (d, x) => (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
    delta = (d, x) => f(d) - x;
  } else {
    compare1 = f === _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"] || f === _descending_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? f : zero;
    compare2 = f;
    delta = f;
  }

  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) <= 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

function zero() {
  return 0;
}


/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ descending)
/* harmony export */ });
function descending(a, b) {
  return a == null || b == null ? NaN
    : b < a ? -1
    : b > a ? 1
    : b >= a ? 0
    : NaN;
}


/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ticks),
/* harmony export */   "tickIncrement": () => (/* binding */ tickIncrement),
/* harmony export */   "tickStep": () => (/* binding */ tickStep)
/* harmony export */ });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,