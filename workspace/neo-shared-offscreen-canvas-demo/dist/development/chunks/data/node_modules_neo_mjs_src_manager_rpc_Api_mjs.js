"use strict";
(self["webpackChunkmainapp"] = self["webpackChunkmainapp"] || []).push([["node_modules_neo_mjs_src_manager_rpc_Api_mjs"],{

/***/ "./node_modules/neo.mjs/src/manager/rpc/Api.mjs":
/*!******************************************************!*\
  !*** ./node_modules/neo.mjs/src/manager/rpc/Api.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base.mjs */ "./node_modules/neo.mjs/src/manager/Base.mjs");


/**
 * @class Neo.manager.rpc.Api
 * @extends Neo.manager.Base
 * @singleton
 */
class Api extends _Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.manager.rpc.Api'
         * @protected
         */
        className: 'Neo.manager.rpc.Api',
        /**
         * @member {Boolean} singleton=true
         * @protected
         */
        singleton: true
    }}

    /**
     * Registers each service & method combination into the collection
     * @param api
     */
    registerApi(api) {
        Object.entries(api.services).forEach(([service, serviceValue]) => {
            Object.entries(serviceValue.methods).forEach(([method, methodValue]) => {
                this.register({
                    id  : `${service}.${method}`,
                    method,
                    service,
                    type: methodValue.type || serviceValue.type || api.type || 'ajax',
                    url : methodValue.url  || serviceValue.url  || api.url
                })
            })
        })
    }
}

Neo.applyClassConfig(Api);

let instance = Neo.create(Api);

Neo.applyToGlobalNs(instance);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL2RhdGEvbm9kZV9tb2R1bGVzX25lb19tanNfc3JjX21hbmFnZXJfcnBjX0FwaV9tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0I7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaURBQUk7QUFDdEIsd0JBQXdCO0FBQ3hCO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLFFBQVEsR0FBRyxPQUFPO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYWluYXBwLy4vbm9kZV9tb2R1bGVzL25lby5tanMvc3JjL21hbmFnZXIvcnBjL0FwaS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2UgZnJvbSAnLi4vQmFzZS5tanMnO1xuXG4vKipcbiAqIEBjbGFzcyBOZW8ubWFuYWdlci5ycGMuQXBpXG4gKiBAZXh0ZW5kcyBOZW8ubWFuYWdlci5CYXNlXG4gKiBAc2luZ2xldG9uXG4gKi9cbmNsYXNzIEFwaSBleHRlbmRzIEJhc2Uge1xuICAgIHN0YXRpYyBnZXRDb25maWcoKSB7cmV0dXJuIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBtZW1iZXIge1N0cmluZ30gY2xhc3NOYW1lPSdOZW8ubWFuYWdlci5ycGMuQXBpJ1xuICAgICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgICAqL1xuICAgICAgICBjbGFzc05hbWU6ICdOZW8ubWFuYWdlci5ycGMuQXBpJyxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBtZW1iZXIge0Jvb2xlYW59IHNpbmdsZXRvbj10cnVlXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIHNpbmdsZXRvbjogdHJ1ZVxuICAgIH19XG5cbiAgICAvKipcbiAgICAgKiBSZWdpc3RlcnMgZWFjaCBzZXJ2aWNlICYgbWV0aG9kIGNvbWJpbmF0aW9uIGludG8gdGhlIGNvbGxlY3Rpb25cbiAgICAgKiBAcGFyYW0gYXBpXG4gICAgICovXG4gICAgcmVnaXN0ZXJBcGkoYXBpKSB7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGFwaS5zZXJ2aWNlcykuZm9yRWFjaCgoW3NlcnZpY2UsIHNlcnZpY2VWYWx1ZV0pID0+IHtcbiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHNlcnZpY2VWYWx1ZS5tZXRob2RzKS5mb3JFYWNoKChbbWV0aG9kLCBtZXRob2RWYWx1ZV0pID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlZ2lzdGVyKHtcbiAgICAgICAgICAgICAgICAgICAgaWQgIDogYCR7c2VydmljZX0uJHttZXRob2R9YCxcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBtZXRob2RWYWx1ZS50eXBlIHx8IHNlcnZpY2VWYWx1ZS50eXBlIHx8IGFwaS50eXBlIHx8ICdhamF4JyxcbiAgICAgICAgICAgICAgICAgICAgdXJsIDogbWV0aG9kVmFsdWUudXJsICB8fCBzZXJ2aWNlVmFsdWUudXJsICB8fCBhcGkudXJsXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxufVxuXG5OZW8uYXBwbHlDbGFzc0NvbmZpZyhBcGkpO1xuXG5sZXQgaW5zdGFuY2UgPSBOZW8uY3JlYXRlKEFwaSk7XG5cbk5lby5hcHBseVRvR2xvYmFsTnMoaW5zdGFuY2UpO1xuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==