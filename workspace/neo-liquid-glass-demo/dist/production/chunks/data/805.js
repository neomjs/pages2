"use strict";(self.webpackChunkmyapp=self.webpackChunkmyapp||[]).push([[805],{805:(e,s,t)=>{t.r(s),t.d(s,{default:()=>i});var r=t(727),a=t(846);class o extends r.A{static config={className:"Neo.manager.rpc.Message",singleton:!0,sorters:[{direction:"ASC",property:"id"}]};endPointTimeouts=[];messageId=1;requestBuffer=20;socketConnections={};transactionId=1;onMessage(e){let s=Neo.manager.rpc.Api.get(`${e.service}.${e.method}`);return this[`onMessage${Neo.capitalize(s.type)}`](e,s)}onMessageAjax(e,s){return new Promise(((t,r)=>{let a=this,{url:o}=s;a.register({id:a.messageId,method:e.method,params:e.params,reject:r,resolve:t,service:e.service,transactionId:0,url:o}),a.messageId++,a.endPointTimeouts.includes(o)||(a.endPointTimeouts.push(o),a.timeout(a.requestBuffer).then((()=>{a.resolveBufferTimeout(o)})))}))}async onMessageWebsocket(e,s){let r=this,{url:a}=s,o=r.socketConnections[a];if(!o){let e=await t.e(851).then(t.bind(t,851));r.socketConnections[a]=o=Neo.create(e.default,{serverAddress:a})}return await o.promiseMessage(e)}async resolveBufferTimeout(e){let s,t=this,r=[],o=t.find({transactionId:0,url:e}),i=[],{transactionId:n}=t;o.forEach((e=>{e.transactionId=n,r.push(e.id),i.push({id:e.id,method:e.method,params:e.params,service:e.service})})),a.A.remove(t.endPointTimeouts,e),t.transactionId++,s=await Neo.Fetch.request(e,{},"post",JSON.stringify({tid:n,requests:i})),o.forEach((e=>{e.resolve()})),t.remove(r)}}const i=Neo.setupClass(o)}}]);