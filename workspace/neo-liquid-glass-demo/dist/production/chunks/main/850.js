"use strict";(self.webpackChunkmyapp=self.webpackChunkmyapp||[]).push([[850,880],{850:(e,a,s)=>{s.r(a),s.d(a,{default:()=>t});var o=s(880),r=s(673);class i extends o.default{static config={className:"Neo.main.addon.ServiceWorker"};construct(e){super.construct(e),this.registerServiceWorker()}async registerServiceWorker(){if("serviceWorker"in navigator){let e,a=this,{config:s}=Neo,{environment:o}=s,i="dist/esm"===o,t="development"===o||i,n=t?"ServiceWorker.mjs":"serviceworker.js",d=t?{type:"module"}:{},l=(t?s.basePath:s.workerBasePath)+n,{serviceWorker:c}=navigator;i&&(l=l.substring(6)),e=await c.register(l,d),window.addEventListener("beforeunload",a.onBeforeUnload.bind(a)),e.addEventListener("updatefound",(()=>{window.location.reload()})),await c.ready,c.onmessage=r.A.onWorkerMessage.bind(r.A),r.A.getWorker("service")||(r.A.serviceWorker=e.active),r.A.sendMessage("service",{action:"registerNeoConfig",data:s})}}onBeforeUnload(){r.A.sendMessage("service",{action:"unregisterPort"})}}const t=Neo.setupClass(i)},880:(e,a,s)=>{s.r(a),s.d(a,{default:()=>i});var o=s(607);class r extends o.A{static config={className:"Neo.main.addon.Base",isMainThreadAddon:!0,isReady_:!1,preloadFilesDelay:5e3};cache=[];isLoading=!1;loadingTimeoutId=null;construct(e){super.construct(e);let a=this;a.loadFiles&&(0===a.preloadFilesDelay?a.loadFiles():Neo.isNumber(a.preloadFilesDelay)&&(a.loadingTimeoutId=setTimeout((()=>{a.loadFiles()}),a.preloadFilesDelay)))}afterSetIsReady(e,a){if(e){let e,a=this;a.cache.forEach((s=>{e=a[s.fn](s.data),s.resolve(e)})),a.cache=[]}}cacheMethodCall(e){let a=this;return a.isLoading||(a.loadingTimeoutId&&clearTimeout(a.loadingTimeoutId),a.loadingTimeoutId=null,a.loadFiles()),new Promise(((s,o)=>{a.cache.push({...e,resolve:s})}))}}const i=Neo.setupClass(r)}}]);