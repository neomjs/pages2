import e from"./Base.mjs";import t from"../util/Array.mjs";class r extends e{static getStaticConfig(){return{alignValues:["center","end","start","stretch",null],directionValues:["column","column-reverse","row","row-reverse",null],packValues:["center","end","start",null],wrapValues:["nowrap","wrap","wrap-reverse"]}}static getConfig(){return{className:"Neo.layout.Flexbox",ntype:"layout-flexbox",align_:null,direction_:null,pack_:null,prefix:"neo-flex-",wrap_:"nowrap"}}afterSetAlign(e,t){this.updateInputValue(e,t,"align")}afterSetDirection(e,t){this.updateInputValue(e,t,"direction")}afterSetPack(e,t){this.updateInputValue(e,t,"pack")}afterSetWrap(e,t){this.updateInputValue(e,t,"wrap")}applyChildAttributes(e){let t=e.wrapperStyle;t.flex=t.flex||e.flex||("stretch"===this.align?1:"0 1 auto"),e.wrapperStyle=t}applyRenderAttributes(){let e=this,r=Neo.getComponent(e.containerId),a=e.prefix,n=r?.cls||[];r||Neo.logError("layout.Flexbox: applyRenderAttributes -> container not yet created",e.containerId),t.add(n,a+"container"),e.align&&t.add(n,a+"align-"+e.align),e.direction&&t.add(n,a+"direction-"+e.direction),e.pack&&t.add(n,a+"pack-"+e.pack),e.wrap&&t.add(n,a+"wrap-"+e.wrap),r.cls=n}beforeSetAlign(e,t){return this.testInputValue(e,t,"alignValues","align")}beforeSetDirection(e,t){return this.testInputValue(e,t,"directionValues","direction")}beforeSetPack(e,t){return this.testInputValue(e,t,"packValues","pack")}beforeSetWrap(e,t){return this.testInputValue(e,t,"wrapValues","wrap")}removeChildAttributes(e){let t=e.wrapperStyle||{};t.flex=e.flex||null,e.wrapperStyle=t}removeRenderAttributes(){let e=this,r=Neo.getComponent(e.containerId),a=e.prefix,n=r?.cls||[];r||Neo.logError("layout.Flexbox: removeRenderAttributes -> container not yet created",e.containerId),t.remove(n,a+"container"),e.align&&t.remove(n,a+"align-"+e.align),e.direction&&t.remove(n,a+"direction-"+e.direction),e.pack&&t.remove(n,a+"pack-"+e.pack),e.wrap&&t.remove(n,a+"wrap-"+e.wrap),r.cls=n}testInputValue(e,r,a,n){const l=this.getStaticConfig(a);return t.hasItem(l,e)?e:(Neo.logError(this.containerId,'-> layout: supported values for "'+n+'" are',l),r)}updateInputValue(e,r,a){let n=Neo.getComponent(this.containerId),l=this.prefix,i=n?.cls;n?.rendered&&(t.remove(i,l+a+"-"+r),null!==e&&t.add(i,l+a+"-"+e),n.cls=i)}}Neo.applyClassConfig(r);export{r as default};