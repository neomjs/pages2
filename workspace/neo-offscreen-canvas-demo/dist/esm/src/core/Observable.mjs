import e from"./Base.mjs";class s extends e{static getConfig(){return{className:"Neo.core.Observable",ntype:"mixin-observable",mixin:!0}}addListener(e,s,t,r,i,n){let o,l,c,a=this,f="object"==typeof e;if(f)e.hasOwnProperty("scope")&&(t=e.scope,delete e.scope),Object.entries(e).forEach((([e,s])=>{a.addListener(e,s,t)}));else if("object"==typeof s)t=t||s.scope,o=s.fn,n=n||s.order,r=r||s.eventId;else if("function"==typeof s)o=s;else{if("string"!=typeof s)throw new Error("Invalid addListener call: "+e);o=s}return f?null:(c={fn:o,scope:t,data:i,id:r||Neo.getId("event")},(l=a.listeners?.[e])?(l.forEach((s=>{(s.id===r||s.fn===o&&s.scope===t)&&console.error("Duplicate event handler attached:",e,a)})),"number"==typeof n?l.splice(n,0,c):"before"===n?l.unshift(c):l.push(c)):a.listeners[e]=[c],c.id)}fire(e){let s,t,r,i,n=this,o=[].slice.call(arguments,1),l=n.listeners;if(l&&l[e])for(t=[...l[e]],i=t.length,r=0;r<i;r++)s=t[r],s.fn.apply(s.scope||n,s.data?o.concat(s.data):o)}initObservable(e){let s,t=this,r=t.__proto__;for(e.listeners&&(t.listeners=e.listeners,delete e.listeners),s=t.listeners,t.listeners={},s&&(Neo.isObject(s)&&(s={...s}),t.addListener(s));r?.constructor.isClass;)r.constructor.staticConfig.observable&&!r.constructor.listeners&&Object.assign(r.constructor,{addListener:t.addListener,fire:t.fire,listeners:{},on:t.on,removeListener:t.removeListener,un:t.un}),r=r.__proto__}on(...e){return this.addListener(...e)}removeListener(e,s){let t,r,i,n,o,l,c=this;Neo.isObject(e)?(e.scope&&(l=e.scope,delete e.scope),Object.entries(e).forEach((([e,s])=>{for(n=c.listeners[e]||[],t=0,r=n.length;t<r;t++)if(i=n[t],i.fn.name===(Neo.isString(s)?s:s.name)&&i.scope===l){n.splice(t,1);break}}))):Neo.isString(s)&&(n=c.listeners[e],o=!1,n.forEach(((e,t)=>{if(e.id===s)return o=t})),!1!==o&&n.splice(o,1))}un(...e){this.removeListener(...e)}}Neo.applyClassConfig(s);export{s as default};