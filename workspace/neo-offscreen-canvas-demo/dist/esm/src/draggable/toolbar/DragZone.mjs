import e from"../../draggable/DragZone.mjs";import t from"../../util/Array.mjs";import r from"../../util/VDom.mjs";class a extends e{static getConfig(){return{className:"Neo.draggable.toolbar.DragZone",ntype:"toolbar-dragzone"}}constructor(e){super(e);let t=this,r=t.owner,a=r.domListeners,o={delegate:".neo-draggable",scope:t};a.push({"drag:end":t.onDragEnd,...o},{"drag:move":t.onDragMove,...o},{"drag:start":t.onDragStart,...o}),r.domListeners=a,r.on("insert",t.onItemInsert,t),t.adjustToolbarItemCls(!0)}adjustToolbarItemCls(e){let r=this.owner,a=r.vdom;a.cn.forEach((r=>{r.cls=r.cls||[],t[e?"add":"remove"](r.cls,"neo-draggable")})),r.vdom=a}onDragEnd(e){if(this.owner.draggable){let e=this,r=e.dragProxy,a=r.cls||{},o=e.dragElementRect,s=r.wrapperStyle||{};t.add(a,"neo-animate"),r.cls=a,setTimeout((()=>{s.left=`${o.left}px`,s.top=`${o.top}px`,r.wrapperStyle=s,setTimeout((()=>{e.dragEnd()}),300)}),30)}}onDragStart(e){let t=this;t.owner.draggable&&(t.dragElement=r.findVdomChild(t.owner.vdom,e.path[0].id).vdom,t.dragStart(e))}onItemInsert(e){let r=e.item,a=r.cls||[];t.add(a,"neo-draggable"),r.cls=a}}Neo.applyClassConfig(a);export{a as default};