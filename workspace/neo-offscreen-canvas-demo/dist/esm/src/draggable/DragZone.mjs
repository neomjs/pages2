import e from"../core/Base.mjs";import r from"./DragProxyComponent.mjs";import o from"../util/Array.mjs";import t from"../core/Observable.mjs";import a from"../util/VDom.mjs";class n extends e{static getStaticConfig(){return{observable:!0}}static getConfig(){return{className:"Neo.draggable.DragZone",ntype:"dragzone",addDragProxyCls:!0,alwaysFireDragMove:!1,appName_:null,bodyCursorStyle:null,boundaryContainerId:null,data:null,dragElement:null,dragElementRect:null,dragProxy:null,dragProxyConfig_:null,dragProxyCls:"neo-dragproxy",dropZoneIdentifier:null,moveHorizontal:!0,moveInMainThread:!0,moveVertical:!0,offsetX:0,offsetY:0,owner:null,proxyParentId_:"document.body",scrollContainerId:null,scrollFactorLeft:1,scrollFactorTop:1,useProxyWrapper:!0}}constructor(e){super(e),Neo.main.addon.DragDrop||console.error("You can not use Neo.draggable.DragZone without adding Neo.main.addon.DragDrop to the main thread addons",this.id)}afterSetAppName(e,r){e&&Neo.currentWorker.insertThemeFiles(e,this.__proto__)}beforeGetDragProxyConfig(e){return Neo.clone(e,!0,!0)}createDragProxy(e){let t=this,n=Neo.getComponent(t.getDragElementRoot().id)||t.owner,l=t.dragElementRect,d=t.dragProxyConfig?.vdom,i=a.clone(d||t.dragElement);const s={module:r,appName:t.appName,moveInMainThread:t.moveInMainThread,parentId:t.proxyParentId,...t.dragProxyConfig,vdom:t.useProxyWrapper?{cn:[i]}:i};s.cls=s.cls||[],n&&s.cls.push(n.getTheme()),i.cls&&!t.useProxyWrapper&&s.cls.push(...i.cls),t.addDragProxyCls&&s.cls&&o.add(s.cls,t.dragProxyCls),s.style=s.style||{},Object.assign(s.style,{height:`${e.height}px`,left:`${t.moveHorizontal?e.x:l.x}px`,top:`${t.moveVertical?e.y:l.y}px`,width:`${e.width}px`}),t.dragProxy=Neo.create(s)}destroyDragProxy(){let e=this,r=e.dragProxy.id;setTimeout((()=>{Neo.currentWorker.promiseMessage("main",{action:"updateDom",appName:e.appName,deltas:[{action:"removeNode",id:r}]})}),e.moveInMainThread?0:30),e.dragProxy.destroy()}dragEnd(e){let r=this,t=r.owner,a=t.cls;o.remove(a,"neo-is-dragging"),t.cls=a,r.dragProxy&&(r.destroyDragProxy(),r.dragProxy=null),Object.assign(r,{dragElementRect:null,offsetX:0,offsetY:0,scrollContainerId:null}),r.fire("dragEnd",e),r.resetData()}dragMove(e){let r,o=this;!o.moveInMainThread&&o.dragProxy&&(r=o.dragProxy.style,o.moveHorizontal&&(r.left=e.clientX-o.offsetX+"px"),o.moveVertical&&(r.top=e.clientY-o.offsetY+"px"),o.dragProxy.style=r),o.fire("dragMove",e)}dragStart(e){let r,t,a=this,n=a.owner,l=n.cls,d=a.getDragElementRect(e);a.setData(),Neo.main.addon.DragDrop.setConfigs({appName:a.appName,...a.getMainThreadConfigs()}),o.add(l,"neo-is-dragging"),n.cls=l,r=e.clientX-d.left,t=e.clientY-d.top,Object.assign(a,{dragElementRect:d,offsetX:r,offsetY:t}),a.createDragProxy(d),a.fire("dragStart",{clientX:e.clientX,clientY:e.clientY,dragElementRect:d,eventData:e,id:a.id,offsetX:r,offsetY:t})}getDragElementRect(e){let r=this.getDragElementRoot().id;for(let o of e.path)if(o.id===r)return o.rect;for(let o of e.targetPath)if(o.id===r)return o.rect;return null}getDragElementRoot(){return this.dragElement}getMainThreadConfigs(){let e=this;return{alwaysFireDragMove:e.alwaysFireDragMove,bodyCursorStyle:e.bodyCursorStyle,boundaryContainerId:e.boundaryContainerId,dragElementRootId:e.getDragElementRoot().id,dragProxyCls:e.dragProxyCls,dragZoneId:e.id,dropZoneIdentifier:e.dropZoneIdentifier,moveHorizontal:e.moveHorizontal,moveVertical:e.moveVertical,scrollContainerId:e.scrollContainerId,scrollFactorLeft:e.scrollFactorLeft,scrollFactorTop:e.scrollFactorTop}}onDrop(e){this.fire("drop",e)}onDropEnter(e){this.fire("drop:enter",e)}onDropLeave(e){this.fire("drop:leave",e)}resetData(){setTimeout((()=>{this.data=null}),30)}setData(e={}){let r=this;r.data={dragElement:r.getDragElementRoot(),dragZoneId:r.id,...e}}}Neo.applyClassConfig(n);export{n as default};