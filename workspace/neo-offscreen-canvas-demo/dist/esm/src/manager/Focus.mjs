import t from"../core/Base.mjs";import o from"../util/Array.mjs";class e extends t{static getConfig(){return{className:"Neo.manager.Focus",singleton:!0,history:[],lastFocusInDate:null,lastFocusOutDate:null,maxFocusInOutGap:10,maxHistoryLength:20}}addToHistory(t){let o=this.history;o.unshift(t),o.length>=this.maxHistoryLength&&o.pop()}focusEnter(t){this.setComponentFocus(t,!0),this.addToHistory(t)}focusLeave(t){this.setComponentFocus(t,!1)}focusMove(t){let e,a,s=this,n=s.history,c=t.componentPath,u=n[0].componentPath,i=o.difference(c,u),h=o.difference(u,c),r=o.intersection(c,u);s.setComponentFocus({componentPath:h,data:t.data},!1),s.setComponentFocus({componentPath:i,data:t.data},!0),r.forEach((o=>{e=Neo.getComponent(o),e&&(a={path:t.data.path,oldPath:n[0].data.path},e.onFocusMove?.(a),e.fire("focusMove",a),e.onFocusChange?.(a),e.fire("focusChange",a))})),s.addToHistory(t)}onFocusin(t){let o=this;o.lastFocusInDate=new Date,o.lastFocusOutDate&&o.lastFocusInDate-o.lastFocusOutDate<o.maxFocusInOutGap?o.focusMove(t):o.focusEnter(t)}onFocusout(t){let o=this;o.lastFocusOutDate=new Date,setTimeout((()=>{o.lastFocusOutDate>o.lastFocusInDate&&o.focusLeave(t)}),o.maxFocusInOutGap)}setComponentFocus(t,o){let e,a={},s=t.componentPath.map((t=>Neo.getComponent(t)));s.forEach((t=>{t&&(t.containsFocus=o)})),s.forEach((s=>{s&&(a[o?"path":"oldPath"]=t.data.path,e=o?"onFocusEnter":"onFocusLeave",s[e]?.(a),s.fire(o?"focusEnter":"focusLeave",a),s.onFocusChange?.(a),s.fire("focusChange",a))}))}}Neo.applyClassConfig(e);let a=Neo.create(e);Neo.applyToGlobalNs(a);export default a;