import e from"../component/Base.mjs";import t from"../layout/Base.mjs";import o from"../layout/Card.mjs";import s from"../layout/Fit.mjs";import r from"../layout/HBox.mjs";import i from"../layout/VBox.mjs";import a from"../core/Logger.mjs";import m from"../util/Array.mjs";class n extends e{static getConfig(){return{className:"Neo.container.Base",ntype:"container",cls:["neo-container"],itemDefaults_:null,items_:[],layout_:{ntype:"vbox",align:"stretch"},_vdom:{cn:[]}}}add(e){let t=this;return t.insert(t.items?t.items.length:0,e)}afterSetAppName(e,t){let o=this;super.afterSetAppName(e,t),e&&o.items&&o.items.forEach((t=>{Neo.isObject(t)&&(t.appName=e)})),e&&o.layout&&(o.layout.appName=e)}afterSetLayout(e,t){let o=this;o.rendered&&(t.removeRenderAttributes(),e.applyRenderAttributes(),o.items.forEach(((o,s)=>{t.removeChildAttributes(o,s),e.applyChildAttributes(o,s)})))}afterSetMounted(e,t){if(super.afterSetMounted(e,t),void 0!==t){let t=this.items,o=0,s=t.length;for(;o<s;o++)t[o].vdom.removeDom||(t[o].mounted=e)}}afterSetRendering(e,t){if(void 0!==t){let t=this.items,o=0,s=t.length;for(;o<s;o++)t[o].vdom.removeDom||(t[o].rendering=e)}}beforeSetLayout(e){return this.createLayout(e)}createItem(t,o){let s,r,i=this,a={appName:i.appName,parentId:i.id,parentIndex:o},m=i.itemDefaults;switch(Neo.typeOf(t)){case"NeoClass":t=Neo.create({...m,module:t,...a});break;case"NeoInstance":t.set(a);break;case"Object":m&&Neo.assignDefaults(t,m),r=t.module,s=r&&!r.isClass&&Neo.isFunction(r),r&&!s&&(t.className=r.prototype.className),"this"===t.handlerScope&&(t.handlerScope=i,"String"===Neo.typeOf(t.handler)&&"Function"===Neo.typeOf(i[t.handler])&&(t.handler=i[t.handler])),Object.assign(t,a),s?t.vdom=Object.assign(t.vdom||{},{removeDom:!0}):t=Neo[t.className?"create":"ntype"](t);break;case"String":t=Neo.create({module:e,vdom:{innerHTML:t},...a})}return t}createItems(){let e=this,t=e._items,o=e.layout,s=e.vdom,r=e.getVdomRoot();r.cn=[],t.forEach(((s,i)=>{t[i]=s=e.createItem(s,i),s instanceof Neo.core.Base&&o.applyChildAttributes(s,i),r.cn.push(s.vdom)})),e.vdom=s}createLayout(e){let o=this;return e&&(e instanceof t&&e.isLayout?(e.appName=o.appName,e.containerId=o.id):((e=o.parseLayoutClass(e)).appName=o.appName,e.containerId=o.id,e=Neo.ntype(e))),e}destroy(e=!1,t=!1){this.items.forEach((e=>{e.destroy(!1,!0)})),super.destroy(e,t)}getVdomItemsRoot(){return this.vdom.cn}indexOf(e){let t=this,o=0,s=t.items?.length||0;for(Neo.isString(e)||(e=e.id);o<s;o++)if(t.items[o].id===e)return o;return-1}insert(e,t,o=!1){let s,r,i,a=this,m=a.items,n=a.vdom;if("Array"===Neo.typeOf(t)){for(s=0,r=t.length,i=[];s<r;s++)i.unshift(a.insert(e,t[r-1-s],!0));t=i}else t=a.createItem(t,e),a.layout.applyChildAttributes(t,e,!0),m.splice(e,0,t),a.items=m,n.cn.splice(e,0,t.vdom);return o?a._vdom=n:a.promiseVdomUpdate().then((()=>{a.fire("insert",{index:e,item:t})})),t}mergeConfig(...e){let t=this,o=super.mergeConfig(...e);return o.itemDefaults&&(t._itemDefaults=Neo.clone(o.itemDefaults,!0,!0),delete o.itemDefaults),o.items&&(t._items=Neo.clone(o.items,!0,!0),delete o.items),o}moveTo(e,t){let o=this,s=o.items[e];return e!==t&&o.switchItems(t,e),s}onConstructed(){let e=this;e._layout=e.createLayout(e.layout),e._layout.applyRenderAttributes(),super.onConstructed(),e.parseItemConfigs(e.items),e.createItems()}parseLayoutClass(e){return Neo.isObject(e)?e.ntype.indexOf("layout-")<0&&(e.ntype="layout-"+e.ntype):e=e.indexOf("layout-")<0?{ntype:"layout-"+e}:{ntype:e},e}remove(e,t=!0,o=!1){let s=[...this.items],r=0,i=s.length;for(;r<i;r++)s[r].id===e.id&&this.removeAt(r,t,o)}removeAt(e,t=!0,o=!1){let s,r,i=this,a=i.items,m=i.vdom;e>=a.length?Neo.warn("Container.removeAt: index >= items.length. "+i.id):(r=a[e],a.splice(e,1),s=m.cn||m.childNodes||m.children,s.splice(e,1),i[o&&!t?"_vdom":"vdom"]=m,t?r.destroy(!0):r.mounted=!1)}removeLast(e=!0,t=!1){this.removeAt(this.items.length-1,e,t)}switchItems(e,t){let o=this,s=Neo.isNumber(e)?e:o.indexOf(e),r=Neo.isNumber(t)?t:o.indexOf(t),i=o.vdom;m.move(o.items,r,s),m.move(o.getVdomItemsRoot(),r,s),o.vdom=i}}Neo.applyClassConfig(n);export{n as default};