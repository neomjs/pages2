import e from"./trigger/SpinDown.mjs";import t from"./trigger/SpinUp.mjs";import i from"./trigger/SpinUpDown.mjs";import n from"./Text.mjs";class r extends n{static getStaticConfig(){return{triggerPositions:["right","sides"]}}static getConfig(){return{className:"Neo.form.field.Number",ntype:"numberfield",cls:["neo-numberfield","neo-textfield"],excludedValues:null,inputEditable_:!0,inputType:"number",maxValue_:100,minValue_:0,stepSize_:1,triggerPosition_:"right",useSpinButtons_:!0}}afterSetInputEditable(e,t){let i=this,n=i.vdom,r=i.getInputEl().style||{};e?delete r.pointerEvents:r.pointerEvents="none",i.vdom=n}afterSetMaxValue(e,t){this.changeInputElKey("max",e)}afterSetMinValue(e,t){this.changeInputElKey("min",e)}afterSetStepSize(e,t){let i,n=this,r=n.value;n.changeInputElKey("step",e),null!==r&&(i=(r-n.minValue)%e,0!==i&&(i/e>.5?r+e-i<n.maxValue?n.value=r+e-i:r-i>n.minValue&&(n.value=r-i):r-i>n.minValue?n.value=r-i:r+e-i<n.maxValue&&(n.value=r+e-i)))}afterSetTriggerPosition(e,t){t&&this.updateTriggers()}afterSetUseSpinButtons(e,t){"boolean"==typeof t&&this.updateTriggers()}beforeSetTriggerPosition(e,t){return this.beforeSetEnumValue(e,t,"triggerPosition")}onConstructed(){this.updateTriggers(),super.onConstructed()}onInputValueChange(e){let t=this,i=e.value,n=t.value;i||t.required?(i=parseInt(i),Neo.isNumber(i)?(i-=i%t.stepSize,i=Math.max(t.minValue,i),i=Math.min(t.maxValue,i),e.value=i,super.onInputValueChange(e)):t._value=n):super.onInputValueChange(e)}onSpinButtonDownClick(){let e=this,t=e.value||e.maxValue+e.stepSize,i=Math.max(e.minValue,t-e.stepSize);if(e.excludedValues)for(;e.excludedValues.includes(i);)i=Math.max(e.minValue,i-e.stepSize);t!==i&&(e.value=i)}onSpinButtonUpClick(){let e=this,t=e.value||e.minValue-e.stepSize,i=Math.min(e.maxValue,t+e.stepSize);if(e.excludedValues)for(;e.excludedValues.includes(i);)i=Math.min(e.maxValue,i+e.stepSize);t!==i&&(e.value=i)}updateTriggers(){let n=this,r=n.triggers||[];n.useSpinButtons?"right"===n.triggerPosition?(n.hasTrigger("spinupdown")||r.push(i),n.removeTrigger("spindown",!0,r),n.removeTrigger("spinup",!0,r)):(n.hasTrigger("spindown")||r.push(e),n.hasTrigger("spinup")||r.push(t),n.removeTrigger("spinupdown",!0,r)):(n.removeTrigger("spindown",!0,r),n.removeTrigger("spinup",!0,r),n.removeTrigger("spinupdown",!0,r)),n.triggers=r}}Neo.applyClassConfig(r);export{r as default};