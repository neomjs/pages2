import e from"./Base.mjs";import t from"../../../util/Array.mjs";class i extends e{static getConfig(){return{className:"Neo.form.field.trigger.CopyToClipboard",ntype:"trigger-copytoclipboard",cls:["neo-field-trigger","neo-trigger-clipboard"],iconCls:"fa fa-clipboard",showOnHover:!0,type:"copyToClipboard",weight:21}}afterSetHidden(e,i){let o=this.cls;t[e?"add":"remove"](o,"neo-is-hidden"),this.cls=o}getHiddenState(){return!this.field.value||0===this.field.value.length}onConstructed(){super.onConstructed();let e=this;e.field.on({change:e.onFieldChange,constructed:e.onFieldChange,scope:e}),e.hidden=e.getHiddenState()}onFieldChange(e){this.hidden=this.getHiddenState()}onTriggerClick(e){Neo.main.DomAccess.selectNode({id:this.field.getInputEl().id}).then((e=>{Neo.main.DomAccess.execCommand({command:"copy"})}))}}Neo.applyClassConfig(i);export{i as default};