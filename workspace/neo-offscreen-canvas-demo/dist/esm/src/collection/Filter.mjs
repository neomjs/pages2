import e from"../core/Base.mjs";import t from"../core/Observable.mjs";class r extends e{static getStaticConfig(){return{observable:!0,operators:["==","===","!=","!==","<","<=",">",">=","excluded","included","isDefined","isUndefined","like"]}}static getConfig(){return{className:"Neo.collection.Filter",ntype:"filter",disabled_:!1,filterBy_:null,includeEmptyValues:!0,isUpdating_:!1,listenerApplied:!1,operator_:"===",property_:"id",scope:null,value_:null}}afterSetDisabled(...e){this.fireChangeEvent(...e)}afterSetFilterBy(e,t){}afterSetIsUpdating(e,t){!1===e&&this.fireChangeEvent(e,t)}afterSetOperator(...e){this.fireChangeEvent(...e)}afterSetProperty(...e){this.fireChangeEvent(...e)}afterSetValue(...e){this.fireChangeEvent(...e)}beforeSetFilterBy(e,t){return e&&"function"!=typeof e?(Neo.logError("filterBy has to be a function",this),t):e}beforeSetOperator(e,t){return this.beforeSetEnumValue(e,t,"operator")}fireChangeEvent(e,t){let r=this;void 0!==t&&!0!==r.isUpdating&&r.fire("change",{operator:r.operator,property:r.property,value:r.value})}isFiltered(e,t,i){let a,n,s=this;return!s._disabled&&(s._filterBy?s.filterBy.call(s.scope||s,e,t,i):(!s.includeEmptyValues||null!==s._value&&!Neo.isEmpty(s._value))&&(a=s._value,n=e[s._property],a instanceof Date&&n instanceof Date&&(a=a.valueOf(),n=n.valueOf()),!r[s._operator](n,a)))}static"=="(e,t){return e==t}static"==="(e,t){return e===t}static"!="(e,t){return e!=t}static"!=="(e,t){return e!==t}static"<"(e,t){return e<t}static"<="(e,t){return e<=t}static">"(e,t){return e>t}static">="(e,t){return e>=t}static excluded(e,t){return t.indexOf(e)<0}static included(e,t){return t.indexOf(e)>-1}static isDefined(e,t){return void 0!==e}static isUndefined(e,t){return void 0===e}static like(e,t){return e?.toLowerCase().includes(t?.toLowerCase())||!1}}Neo.applyClassConfig(r);export default r;