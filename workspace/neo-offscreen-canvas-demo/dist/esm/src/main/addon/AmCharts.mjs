import t from"../../core/Base.mjs";import a from"../DomAccess.mjs";class e extends t{static getConfig(){return{className:"Neo.main.addon.AmCharts",charts:{},chartsToCreate:[],dataMap:{},downloadPath:"https://www.amcharts.com/lib/4/",fallbackPath:"https://neomjs.github.io/pages/resources/amCharts/",scriptsLoaded_:!1,singleton:!0,remote:{app:["callMethod","create","destroy","setProperties","setProperty","updateData"]}}}constructor(t){super(t),this.insertAmChartsScripts()}afterSetScriptsLoaded(t,a){if(t){const t=this;t.chartsToCreate.forEach((a=>{t.create(a)})),t.chartsToCreate=[],setTimeout((()=>{Object.entries(t.dataMap).forEach((([a,e])=>{t.updateData(e)})),t.dataMap={}}),1e3)}}callMethod(t){if(this.hasChart(t.id)){const a=this.charts[t.id],e=t.path.split("."),s=e.pop(),o=e.length<1?a:Neo.ns(e.join("."),!1,a);o[s].call(o,...t.params||[])}}combineSeriesTooltip(t){t.series.each((a=>{a.adapter.add("tooltipText",(()=>{let a="[bold]{dateX}[/]\n";return t.series.each((t=>{a+="["+t.stroke+"]●[/] "+t.name+": {"+t.dataFields.valueY+"}\n"})),a}))}))}create(t){const a=this;a.scriptsLoaded?(a.charts[t.id]=am4core.createFromConfig(t.config,t.id,self[t.package][t.type||"XYChart"]),t.combineSeriesTooltip&&a.combineSeriesTooltip(a.charts[t.id]),t.data?a.updateData({data:t.data,dataPath:t.dataPath,id:t.id}):a.dataMap[t.id]&&(a.updateData(a.dataMap[t.id]),delete a.dataMap[t.id])):a.chartsToCreate.push(t)}destroy(t){this.charts[t.id].dispose(),delete this.charts[t.id]}hasChart(t){return!!this.charts[t]}insertAmChartsScripts(t=!1){const e=this,s=t?e.fallbackPath:e.downloadPath;a.loadScript(s+"core.js").then((()=>{Promise.all([a.loadScript(s+"charts.js"),a.loadScript(s+"maps.js"),a.loadScript(s+"geodata/worldLow.js")]).then((()=>{e.scriptsLoaded=!0}))})).catch((t=>{console.log("Download from amcharts.com failed, switching to fallback",t),e.insertAmChartsScripts(!0)}))}setProperties(t){Object.entries(t.properties).forEach((([a,e])=>{this.setProperty({id:t.id,path:a,value:e})}))}setProperty(t){if(this.hasChart(t.id)){const a=this.charts[t.id],e=t.path.split("."),s=e.pop();Neo.ns(e.join("."),!1,a)[s]=t.isColor?am4core.color(t.value):t.value}}updateData(t){const a=this;if(a.scriptsLoaded&&a.hasChart(t.id)){const e=a.charts[t.id];""===t.dataPath?e.data=t.data:Neo.ns(t.dataPath,!1,e).data=t.data}else a.dataMap[t.id]=t}}Neo.applyClassConfig(e);let s=Neo.create(e);Neo.applyToGlobalNs(s);export default s;