import e from"../collection/Base.mjs";import t from"../util/ClassSystem.mjs";import o from"./Model.mjs";import r from"../core/Observable.mjs";import a from"./RecordFactory.mjs";class i extends e{static getStaticConfig(){return{observable:!0}}static getConfig(){return{className:"Neo.data.Store",ntype:"store",autoLoad:!1,data_:null,initialData_:null,isGrouped:!1,isLoaded:!1,isLoading:!1,model_:null,remoteFilter:!1,remoteSort:!1,url:null}}constructor(e){super(e);let t=this;t.on({mutate:t.onCollectionMutate,sort:t.onCollectionSort,scope:t})}add(e){return super.add(this.beforeSetData(e))}afterSetData(e,t){let o=this;o.configsApplied&&e&&(t?o.clear():o.initialData=[...e],o.add(e))}afterSetInitialData(e,t){}afterSetModel(e,t){e&&(e.storeId=this.id,a.createRecordClass(e))}beforeSetData(e,t){let o=this;return e&&(Array.isArray(e)||(e=[e]),(e=Neo.clone(e,!0)).forEach(((t,r)=>{a.isRecord(t)||(e[r]=a.createRecord(o.model,t))}))),e}beforeSetInitialData(e,t){return!e&&t?t:e}beforeSetModel(e,r){return r&&r.destroy(),t.beforeSetInstance(e,o)}createRecord(e){a.createRecord(e)}load(){let e=this;Neo.Xhr.promiseJson({url:e.url}).then((t=>{e.data=Array.isArray(t.json)?t.json:t.json.data})).catch((t=>{console.log("Error for Neo.Xhr.request",t,e.id)}))}onCollectionMutate(e){let t=this;t.configsApplied&&t.fire("load",t.items)}onCollectionSort(){this.configsApplied}onConstructed(){super.onConstructed();let e=this;e.data&&e.afterSetData(e.data),e.autoLoad&&setTimeout((()=>{e.load()}),100)}onRecordChange(e){this.fire("recordChange",{...e,index:this.indexOf(e.record)})}sort(e={}){let t=this;t.remoteSort||t.configsApplied&&(e.direction?t.sorters=[{direction:e.direction,property:e.property}]:(t.startUpdate(),t.clear(),t.sorters=[],t.add([...t.initialData]),t.endUpdate(),t.fire("sort")))}}Neo.applyClassConfig(i);export{i as default};