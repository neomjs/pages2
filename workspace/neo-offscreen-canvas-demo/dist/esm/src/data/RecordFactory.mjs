import e from"../core/Base.mjs";import o from"../core/Logger.mjs";import r from"./Model.mjs";let s;class t extends e{static getConfig(){return{className:"Neo.data.RecordFactory",singleton:!0,ovPrefix:"ov_",recordNamespace:"Neo.data.record."}}createRecord(e,o){let r=Neo.ns(this.recordNamespace+e.className);return r||(r=this.createRecordClass(e)),new r(o)}createRecordClass(e){if(e instanceof r){let o,r,t=this.recordNamespace+e.className,i=Neo.ns(t);return i||(r=t.split("."),o=r.pop(),i=Neo.ns(r,!0),i[o]=class{constructor(o){let r,t=this;Object.defineProperties(t,{_isModified:{value:!1,writable:!0}}),Array.isArray(e.fields)&&e.fields.forEach((i=>{let a=s.parseRecordValue(i,o[i.name]),l=Symbol.for(i.name);r={[Symbol.for("isRecord")]:{value:!0},[l]:{value:a,writable:!0},[i.name]:{configurable:!0,enumerable:!0,get(){return this[l]},set(o){let r=this,t=r[l];Neo.isEqual(o,t)||(o=s.parseRecordValue(i,o),r[l]=o,r._isModified=!0,r._isModified=s.isModified(r,e.trackModifiedFields),s.onRecordChange({fields:[{name:i.name,oldValue:t,value:o}],model:e,record:r}))}}},e.trackModifiedFields&&(r[s.ovPrefix+i.name]={value:a}),Object.defineProperties(t,r)}))}set(o){s.setRecordFields(e,this,o)}setSilent(o){s.setRecordFields(e,this,o,!0)}},i[o].isClass=!0,i[o])}}isModified(e,o){if(o){let o,r=Object.keys(e),s=0,t=r.length;for(;s<t;s++)if(o=r[s],!Neo.isEqual(e[o],e[this.ovPrefix+o]))return!0;return!1}return e._isModified}isModifiedField(e,r){e.hasOwnProperty(r)||o.logError("The record does not contain the field",r,e);let s=this.ovPrefix+r;return e.hasOwnProperty(s)?!Neo.isEqual(e[r],e[s]):null}isRecord(e){return e?.[Symbol.for("isRecord")]||!1}onRecordChange(e){Neo.get(e.model.storeId)?.onRecordChange(e)}parseRecordValue(e,o){const r=e?.type.toLowerCase();return"date"===r?new Date(o):o}setRecordFields(e,o,r,s=!1){let t,i=[];Object.entries(r).forEach((([e,r])=>{t=o[e],Neo.isEqual(t,r)||(o[Symbol.for(e)]=r,i.push({name:e,oldValue:t,value:r}))})),!s&&Object.keys(i).length>0&&Neo.get(e.storeId)?.onRecordChange({fields:i,model:e,record:o})}}Neo.applyClassConfig(t),s=Neo.create(t),Neo.applyToGlobalNs(s);export default s;