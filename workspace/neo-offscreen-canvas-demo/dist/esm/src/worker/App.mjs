import e from"../Neo.mjs";import s from"./Base.mjs";import*as t from"../core/_export.mjs";import a from"../controller/Application.mjs";import o from"../manager/Instance.mjs";import i from"../manager/DomEvent.mjs";import n from"../util/HashHistory.mjs";class r extends s{data=null;isUsingViewModels=!1;themeFilesCache=[];static getConfig(){return{className:"Neo.worker.App",singleton:!0,workerId:"app"}}constructor(s){super(s),e.applyDeltas=this.applyDeltas.bind(this)}applyDeltas(e,s){return this.promiseMessage("main",{action:"updateDom",appName:e,deltas:s})}createThemeMap(s){e.ns("Neo.cssMap.fileInfo",!0),e.cssMap.fileInfo=s,this.resolveThemeFilesCache()}fireMainViewsEvent(s,t){this.ports.forEach((a=>{e.apps[a.appName].mainViewInstance.fire(s,t)}))}importApp(e){return e.endsWith(".mjs")&&(e=e.slice(0,-4)),import(`../../${e}.mjs`)}insertThemeFiles(s,t,a){if(e.config.themes.length>0){a=a||t.className;let o,i,n,r,p,m=this,h=s.toLowerCase(),l=e.cssMap,c=t?.__proto__;l?(a.startsWith("Neo.")||((a=a.split(".")).shift(),"view"===a[0]&&a.shift(),n=`apps.${e.apps[s].appThemeFolder||h}.${a.join(".")}`,a=`apps.${h}.${a.join(".")}`),c&&c!==e.core.Base.prototype&&(e.ns(`${h}.${c.className}`,!1,l)||m.insertThemeFiles(s,c)),p=e.ns(n||a,!1,l.fileInfo),p&&(e.ns(`${h}.${a}`,!1,l)||(o=a.split("."),i=o.pop(),o=o.join("."),r=e.ns(`${h}.${o}`,!0,l),r[i]=!0,e.main.addon.Stylesheet.addThemeFiles({appName:s,className:n||a,folders:p})))):m.themeFilesCache.push([s,t])}}onDomEvent(e){i.fire(e)}onHashChange(e){n.push(e.data)}onLoadApplication(s){let t,a=this;s&&(a.data=s,e.config.resourcesPath=s.resourcesPath),t=a.data.path,"development"!==e.config.environment&&(t=t.startsWith("/")?t.substring(1):t),a.importApp(t).then((s=>{s.onStart(),e.config.hash&&setTimeout((()=>n.push(e.config.hash)),5)}))}onRegisterNeoConfig(s){super.onRegisterNeoConfig(s);let t=e.config,a=`resources/theme-map${e.config.useCssVars?"":"-no-vars"}.json`;"development"===e.config.environment&&(a=`../../${a}`),t.workerBasePath?.includes("node_modules")&&(a=`../../${a}`),"."!==a[0]&&(a=`./${a}`),fetch(a).then((e=>e.json())).then((e=>{this.createThemeMap(e)}))}onRegisterPort(e){let s=this,t=e.transfer;t.onmessage=s.onMessage.bind(s),s.channelPorts[e.origin]=t}onWindowPositionChange(e){this.fireMainViewsEvent("windowPositionChange",e.data)}registerApp(e){let s=this;s.ports.forEach((t=>{t.appName||(t.appName=e,s.onConnect({appName:e}),s.sendMessage("main",{action:"registerAppName",appName:e}))}))}resolveThemeFilesCache(){let e=this;e.themeFilesCache.forEach((s=>{e.insertThemeFiles(...s)})),e.themeFilesCache=[]}}e.applyClassConfig(r);let p=e.create(r);e.applyToGlobalNs(p);export default p;