import e from"../core/Base.mjs";import o from"../core/Observable.mjs";import t from"./Message.mjs";import r from"./mixin/RemoteMethodAccess.mjs";class s extends e{channelPorts=null;isConnected=!1;isSharedWorker=!1;ports=null;static getConfig(){return{className:"Neo.worker.Base",mixins:[o,r],workerId:null}}constructor(e){super(e);let o=this;Object.assign(o,{channelPorts:{},isSharedWorker:"[object SharedWorkerGlobalScope]"===self.toString(),ports:[],promises:{}}),o.isSharedWorker?self.onconnect=o.onConnected.bind(o):self.onmessage=o.onMessage.bind(o),Neo.workerId=o.workerId,Neo.currentWorker=o}afterConnect(){}getPort(e){let o,t=null;return this.ports.forEach((r=>{o=!0,Object.entries(e).forEach((([e,t])=>{t!==r[e]&&(o=!1)})),o&&(t=r)})),t}onConnect(e){setTimeout((()=>{this.fire("connect",{appName:e.appName})}),10)}onConnected(e){let o=this,t=Neo.getId("port");o.isConnected=!0,o.ports.push({appName:null,id:t,port:e.ports[0]}),o.ports[o.ports.length-1].port.onmessage=o.onMessage.bind(o),o.fire("connected"),o.sendMessage("main",{action:"workerConstructed",port:t}),o.afterConnect()}onConstructed(){super.onConstructed();let e=this;e.isSharedWorker||(e.sendMessage("main",{action:"workerConstructed"}),e.afterConnect())}onDisconnect(e){this.fire("disconnect",{appName:e.appName})}onMessage(e){let o,t=this,r=e.data,s=r.action,n=r.replyId;if(!s)throw new Error("Message action is missing: "+r.id);"reply"!==s?t["on"+Neo.capitalize(s)](r):(o="reply"===s&&t.promises[n])&&(r.reject?o.reject(r.data):o.resolve(r.data),delete t.promises[n])}onPing(e){this.resolve(e,{originMsg:e})}onRegisterNeoConfig(e){Neo.config=Neo.config||{},Object.assign(Neo.config,e.data)}promiseMessage(e,o,t){let r=this;return new Promise((function(s,n){let a=r.sendMessage(e,o,t).id;r.promises[a]={resolve:s,reject:n}}))}sendMessage(e,o,r){o.destination=e;let s,n,a,i=this;return i.channelPorts[e]?n=i.channelPorts[e]:i.isSharedWorker?o.port?n=i.getPort({id:o.port}).port:o.appName?(a=i.getPort({appName:o.appName}),n=a.port,o.port=a.id):n=i.ports[0].port:n=self,s=new t(o),n.postMessage(s,r),s}}Neo.applyClassConfig(s);export{s as default};