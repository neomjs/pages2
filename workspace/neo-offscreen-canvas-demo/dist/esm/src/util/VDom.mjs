import e from"../core/Base.mjs";class t extends e{static getConfig(){return{className:"Neo.util.VDom"}}static clone(e,r=!0){const i=Neo.clone(e,!0);return r&&delete i.id,i.cn&&i.cn.forEach(((e,n)=>{i.cn[n]=t.clone(e,r)})),i}static findVdomChild(e,r,i,n){i=i||0,r="string"!=typeof r?r:{id:r};let o,d=null,s=[],c=!0,l=0,a=e.cn?.length,f=Object.entries(r),h=f.length;if(f.forEach((([t,r])=>{if(e.hasOwnProperty(t))switch(t){case"cls":if("string"==typeof r&&Neo.isArray(e[t]))e[t].includes(r)&&s.push(!0);else if("string"==typeof r&&"string"==typeof e[t])e[t]===r&&s.push(!0);else if(Neo.isArray(r)&&Neo.isArray(e[t]))throw new Error("findVdomChild: cls matching not supported for target & source types of Arrays");break;case"style":if("string"==typeof r&&"string"==typeof e[t])e[t]===r&&s.push(!0);else{if(!Neo.isObject(r)||!Neo.isObject(e[t]))throw new Error("findVdomChild: style matching not supported for mixed target & source types (Object VS String)");Object.entries(r).forEach((([r,i])=>{e[t].hasOwnProperty(r)&&e[t][r]===i||(c=!1)})),c&&s.push(!0)}break;default:e[t]===r&&s.push(!0)}})),s.length===h)return{index:i,parentNode:n,vdom:e};if(e.cn)for(;l<a;l++)if(e.cn[l]&&(o=t.findVdomChild(e.cn[l],r,l,e),o)){d={index:o.index,parentNode:o.parentNode,vdom:o.vdom};break}return d}static getByFlag(e,r){let i=t.findVdomChild(e,{flag:r});return i?.vdom}static getChildIds(e,r=[]){return(e?.cn||[]).forEach((e=>{e.id&&r.push(e.id),r=t.getChildIds(e,r)})),r}static getColumnNodes(e,t){let r=[];return e.cn&&e.cn.forEach((e=>{e.cn?.[t]&&r.push(e.cn[t])})),r}static getColumnNodesIds(e,r){return t.getColumnNodes(e,r).map((e=>e.id))}static getFlags(e,r,i){return i||(i=[],e.flag===r&&i.push(e)),(e?.cn||[]).forEach((e=>{e.flag===r&&i.push(e),i=t.getFlags(e,r,i)})),i}static getParentNodes(e,r,i=!0){let n=null,o=0,d=e.cn?.length||0;if(e.id===r)return[];for(;o<d;o++)if(n=t.getParentNodes(e.cn[o],r,!1),n){n.push(e.cn[o]);break}return i&&n&&n.push(e),n}static insertAfterNode(e,r,i){return t.insertNode(e,r,i,!1)}static insertBeforeNode(e,r,i){return t.insertNode(e,r,i,!0)}static insertNode(e,r,i,n){Neo.isObject(i)&&(i=i.id);let o,d=t.findVdomChild(e,{id:i});return!!d&&(o=n?d.index:d.index+1,d.parentNode.cn.splice(o,0,r),!0)}static removeVdomChild(e,r){let i=t.findVdomChild(e,r);return!!i&&(i.parentNode.cn.splice(i.index,1),!0)}static replaceVdomChild(e,r,i){let n,o=e.cn||[],d=0,s=o.length;if(e.id===r)throw new Error("replaceVdomChild: target id matches the root vnode id: "+r);for(;d<s;d++){if(n=o[d],n.id===r)return o[d]=i,!0;if(t.replaceVdomChild(n,r,i))return!0}return!1}static syncVdomIds(e,r){if(e&&r){let i,n,o,d=r.childNodes||r.cn;if(e.id&&e.id!==r.id&&(r.id=e.id),d)for(i=d.filter((e=>!0!==e.removeDom)),n=0,o=i?.length||0;n<o;n++)e.childNodes&&t.syncVdomIds(e.childNodes[n],i[n])}}}Neo.applyClassConfig(t);export default t;