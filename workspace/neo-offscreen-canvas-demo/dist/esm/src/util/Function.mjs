import t from"../core/Base.mjs";class e extends t{static getConfig(){return{className:"Neo.util.Function"}}static bindAppend(t){const e=this,n=[].slice.call(arguments).slice(1);return function(){return e.apply(t,[].slice.call(arguments).concat(n))}}static createSequence(t,e,n,c){let i=t[e]||Neo.emptyFn;return t[e]=function(){return i.apply(this,arguments),n.apply(c||this,arguments)}}static intercept(t,e,n,c){let i=t[e]||Neo.emptyFn;return t[e]=function(){let t=n.apply(c||this,arguments);return i.apply(this,arguments),t}}}Neo.applyClassConfig(e);export default e;