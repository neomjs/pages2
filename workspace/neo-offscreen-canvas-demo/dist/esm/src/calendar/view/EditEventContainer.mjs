import e from"../../button/Base.mjs";import t from"../store/Calendars.mjs";import i from"../../form/field/Color.mjs";import l from"../../util/Date.mjs";import n from"../../form/Container.mjs";import a from"../../form/field/Text.mjs";import r from"../../form/field/Time.mjs";class o extends n{static getConfig(){return{className:"Neo.calendar.view.EditEventContainer",bind:{intlFormat_time:e=>e.intlFormat_time,minimumEventDuration:e=>e.minimumEventDuration},calendarFieldConfig:null,cls:["neo-calendar-edit-event-container"],endTimeFieldConfig:null,intlFormat_time:null,owner:null,record_:null,startTimeFieldConfig:null,titleFieldConfig:null}}constructor(e){super(e),this.vdom.tabIndex=-1}afterSetMounted(e,t){super.afterSetMounted(e,t),e&&this.getField("title").focus()}afterSetRecord(e,t){if(e&&t){let t=this,i=t.intlFormat_time;t.getField("endTime").minValue=t.getEndTimeMinValue(e),t.getField("startTime").maxValue=t.getStartTimeMaxValue(e),t.reset({calendarId:e.calendarId,endTime:i.format(e.endDate),startTime:i.format(e.startDate),title:e.title})}else e&&this.createItems()}createItems(){let l=this,n=l.owner,o=l.record,m=l.intlFormat_time,d={module:r,clearToOriginalValue:!0,flex:"none",labelPosition:"inline",listeners:{change:l.onTimeFieldChange,scope:l},stepSize:900,width:"9em"};o&&(l.items=[{module:a,clearToOriginalValue:!0,flex:"none",labelPosition:"inline",labelText:"Title",listeners:{change:l.onTitleFieldChange,scope:l},name:"title",required:!0,value:o.title,...l.titleFieldConfig},{module:i,clearToOriginalValue:!0,colorField:"color",displayField:"name",flex:"none",forceSelection:!0,labelPosition:"inline",labelText:"Calendar",listeners:{change:l.onCalendarFieldChange,scope:l},name:"calendarId",required:!0,triggerAction:"all",value:o.calendarId,colorFormatter:(e,t)=>{let i=t[e.colorField];return"yellow"===i?"var(--event-yellow-border-color)":`var(--event-${i}-color)`},store:{module:t,sourceId:l.model.getStore("calendars").id},...l.calendarFieldConfig},{labelText:"Start Time",maxValue:l.getStartTimeMaxValue(o),minValue:n.startTime,name:"startTime",value:m.format(o.startDate),...d,...l.startTimeFieldConfig},{labelText:"End Time",maxValue:n.endTime,minValue:l.getEndTimeMinValue(o),name:"endTime",value:m.format(o.endDate),...d,...l.endTimeFieldConfig},{module:e,cls:["neo-button","neo-red"],handler:l.onDeleteButtonClick.bind(l),iconCls:"fas fa-trash-alt",style:{marginTop:"3em"},text:"Delete"}],super.createItems())}getEndTimeMinValue(e){let t=new Date(e.startDate.valueOf());return t.setMinutes(t.getMinutes()+this.minimumEventDuration),this.intlFormat_time.format(t)}getStartTimeMaxValue(e){let t=new Date(e.endDate.valueOf());return t.setMinutes(t.getMinutes()-this.minimumEventDuration),this.intlFormat_time.format(t)}onCalendarFieldChange(e){Neo.isEmpty(e.value)||(this.record.calendarId=e.value[e.component.store.keyProperty])}onDeleteButtonClick(e){let t=this;t.getModel().getStore("events").remove(t.record),t.unmount()}onFocusLeave(e){let t=this;setTimeout((()=>{t.mounted&&t.unmount()}),100)}onTimeFieldChange(e){let t=this,i=e.component.name,n="endTime"===i?"endDate":"startDate",a=t.record,r=l.clone(t.record[n]),o=e.value.split(":").map((e=>Number(e)));r.setHours(o[0]),r.setMinutes(o[1]),a[n]=r,"endTime"===i?t.getField("startTime").maxValue=t.getStartTimeMaxValue(a):t.getField("endTime").minValue=t.getEndTimeMinValue(a)}onTitleFieldChange(e){Neo.isEmpty(e.value)||(this.record.title=e.value)}}Neo.applyClassConfig(o);export{o as default};