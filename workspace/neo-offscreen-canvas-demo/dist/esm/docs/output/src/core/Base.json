{"classData":[{"comment":"/**\n * The base class for (almost) all classes inside the Neo namespace\n * Exceptions are e.g. core.IdGenerator, vdom.VNode\n * @class Neo.core.Base\n */","meta":{"filename":"Base.mjs","lineno":7,"columnno":0,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The base class for (almost) all classes inside the Neo namespace\nExceptions are e.g. core.IdGenerator, vdom.VNode</p>\n","kind":"class","name":"Base","memberof":"Neo.core","longname":"Neo.core.Base","scope":"static","$longname":"Neo.core.Base","$kind":"class","id":1642,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * The return value will get applied to the class constructor\n     * @returns {Object} staticConfig\n     * @static\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[543,885],"filename":"Base.mjs","lineno":19,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100051847","name":"Base.getStaticConfig","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>The return value will get applied to the class constructor</p>\n","returns":[{"type":{"names":["Object"]},"description":"staticConfig"}],"scope":"static","tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"getStaticConfig","longname":"Base.getStaticConfig","kind":"function","memberof":"Base","params":[],"$longname":"Base.getStaticConfig","$kind":"method","id":1643,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * Set this one to false in case you don't want to stick\n         * to the \"anti-pattern\" to apply classes to the global Neo or App namespace\n         * @member {Boolean} registerToGlobalNs=true\n         * @protected\n         * @static\n         */","meta":{"filename":"Base.mjs","lineno":27,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Set this one to false in case you don&#39;t want to stick\nto the &quot;anti-pattern&quot; to apply classes to the global Neo or App namespace</p>\n","kind":"member","name":"registerToGlobalNs","type":{"names":["Boolean"]},"defaultvalue":true,"access":"protected","scope":"static","longname":"registerToGlobalNs","$longname":"registerToGlobalNs","$kind":"property","id":1644,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * The return value will get applied to each class instance\n     * @returns {Object} staticConfig\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[1041,2235],"filename":"Base.mjs","lineno":35,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100051855","name":"Base.getConfig","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>The return value will get applied to each class instance</p>\n","returns":[{"type":{"names":["Object"]},"description":"staticConfig"}],"tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"getConfig","longname":"Base.getConfig","kind":"function","memberof":"Base","scope":"static","params":[],"$longname":"Base.getConfig","$kind":"method","id":1645,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * The class name which will get mapped into the Neo or app namespace\n         * @member {String} className='Neo.core.Base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":41,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The class name which will get mapped into the Neo or app namespace</p>\n","kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.core.Base'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1646,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * The class shortcut-name to use for e.g. creating child components inside a JSON-format\n         * @member {String} ntype='base'\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":47,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The class shortcut-name to use for e.g. creating child components inside a JSON-format</p>\n","kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'base'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1647,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * The unique component id\n         * @member {String|null} id_=null\n         */","meta":{"filename":"Base.mjs","lineno":52,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>The unique component id</p>\n","kind":"member","name":"id_","type":{"names":["String","null"]},"defaultvalue":null,"longname":"id_","scope":"global","$longname":"id_","$kind":"property","id":1648,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * Neo.create() will change this flag to true after the onConstructed() chain is done.\n         * @member {Boolean} isConstructed=false\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":58,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Neo.create() will change this flag to true after the onConstructed() chain is done.</p>\n","kind":"member","name":"isConstructed","type":{"names":["Boolean"]},"defaultvalue":false,"access":"protected","longname":"isConstructed","scope":"global","$longname":"isConstructed","$kind":"property","id":1649,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * Add mixins as an array of classNames, imported modules or a mixed version\n         * @member {String[]|Neo.core.Base[]|null} mixins=null\n         */","meta":{"filename":"Base.mjs","lineno":63,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>Add mixins as an array of classNames, imported modules or a mixed version</p>\n","kind":"member","name":"mixins","type":{"names":["Array.<String>","Array.<Neo.core.Base>","null"]},"defaultvalue":null,"longname":"mixins","scope":"global","$longname":"mixins","$kind":"property","id":1650,"neoClassName":"Neo.core.Base"},{"comment":"/**\n         * You can create a new instance by passing an imported class (JS module default export)\n         * @member {Class} module=null\n         * @protected\n         */","meta":{"filename":"Base.mjs","lineno":69,"columnno":8,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{}},"description":"<p>You can create a new instance by passing an imported class (JS module default export)</p>\n","kind":"member","name":"module","type":{"names":["Class"]},"defaultvalue":null,"access":"protected","longname":"module","scope":"global","$longname":"module","$kind":"property","id":1651,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Consumes the static getConfig() return object.\n     * Applies the observable mixin if needed, grants remote access if needed.\n     * @param {Object} config={}\n     */","meta":{"range":[2423,3277],"filename":"Base.mjs","lineno":77,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100051873","name":"Base","type":"MethodDefinition","paramnames":["config"]},"vars":{"":null}},"description":"<p>Consumes the static getConfig() return object.\nApplies the observable mixin if needed, grants remote access if needed.</p>\n","params":[{"type":{"names":["Object"]},"defaultvalue":"{}","name":"config"}],"name":"Base","longname":"Base","kind":"class","scope":"global","$longname":"Base","$kind":"constructor","id":1652,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Triggered after the id config got changed.\n     * You can dynamically change instance ids if needed. They need to stay unique at any given point.\n     * Use case: e.g. component based lists, where you want to re-use item instances.\n     * @param {String|null} value\n     * @param {String|null} oldValue\n     * @protected\n     */","meta":{"range":[3627,4121],"filename":"Base.mjs","lineno":120,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100051985","name":"Base#afterSetId","type":"MethodDefinition","paramnames":["value","oldValue"]},"vars":{"":null}},"description":"<p>Triggered after the id config got changed.\nYou can dynamically change instance ids if needed. They need to stay unique at any given point.\nUse case: e.g. component based lists, where you want to re-use item instances.</p>\n","params":[{"type":{"names":["String","null"]},"name":"value"},{"type":{"names":["String","null"]},"name":"oldValue"}],"access":"protected","name":"afterSetId","longname":"Base#afterSetId","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#afterSetId","$kind":"method","id":1653,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Convenience method for beforeSet functions which test if a given value is inside a static array\n     * @param {String|Number} value\n     * @param {String|Number} oldValue\n     * @param {String} name config name\n     * @param {Array|String} [staticName=name + 's'] name of the static config array\n     * @returns {String|Number} value or oldValue\n     */","meta":{"range":[4496,4860],"filename":"Base.mjs","lineno":147,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052061","name":"Base#beforeSetEnumValue","type":"MethodDefinition","paramnames":["value","oldValue","name","staticName"]},"vars":{"":null}},"description":"<p>Convenience method for beforeSet functions which test if a given value is inside a static array</p>\n","params":[{"type":{"names":["String","Number"]},"name":"value"},{"type":{"names":["String","Number"]},"name":"oldValue"},{"type":{"names":["String"]},"description":"<p>config name</p>\n","name":"name"},{"type":{"names":["Array","String"]},"optional":true,"defaultvalue":"name + 's'","description":"<p>name of the static config array</p>\n","name":"staticName"}],"returns":[{"type":{"names":["String","Number"]},"description":"value or oldValue"}],"name":"beforeSetEnumValue","longname":"Base#beforeSetEnumValue","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#beforeSetEnumValue","$kind":"method","id":1654,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Uses the IdGenerator to create an id if a static one is not explicitly set.\n     * Registers the instance to manager.Instance if this one is already created,\n     * otherwise stores it inside a tmp map.\n     * @param {String} id\n     */","meta":{"range":[5118,5198],"filename":"Base.mjs","lineno":164,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052116","name":"Base#createId","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Uses the IdGenerator to create an id if a static one is not explicitly set.\nRegisters the instance to manager.Instance if this one is already created,\notherwise stores it inside a tmp map.</p>\n","params":[{"type":{"names":["String"]},"name":"id"}],"name":"createId","longname":"Base#createId","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#createId","$kind":"method","id":1655,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Unregisters this instance from Neo.manager.Instance\n     * and removes all object entries from this instance\n     */","meta":{"range":[5336,5728],"filename":"Base.mjs","lineno":172,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052136","name":"Base#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Unregisters this instance from Neo.manager.Instance\nand removes all object entries from this instance</p>\n","name":"destroy","longname":"Base#destroy","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#destroy","$kind":"method","id":1656,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Used inside createId() as the default value passed to the IdGenerator.\n     * Override this method as needed.\n     * @returns {String}\n     */","meta":{"range":[5892,5937],"filename":"Base.mjs","lineno":193,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052202","name":"Base#getIdKey","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Used inside createId() as the default value passed to the IdGenerator.\nOverride this method as needed.</p>\n","returns":[{"type":{"names":["String"]}}],"name":"getIdKey","longname":"Base#getIdKey","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#getIdKey","$kind":"method","id":1657,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Returns the value of a static config key or the staticConfig object itself in case no value is set\n     * @param {String} [key] The key of a staticConfig defined inside static getStaticConfig\n     * @returns {*}\n     */","meta":{"range":[6178,6294],"filename":"Base.mjs","lineno":202,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052210","name":"Base#getStaticConfig","type":"MethodDefinition","paramnames":["key"]},"vars":{"":null}},"description":"<p>Returns the value of a static config key or the staticConfig object itself in case no value is set</p>\n","params":[{"type":{"names":["String"]},"optional":true,"description":"<p>The key of a staticConfig defined inside static getStaticConfig</p>\n","name":"key"}],"returns":[{"type":{"names":["*"]}}],"name":"getStaticConfig","longname":"Base#getStaticConfig","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#getStaticConfig","$kind":"method","id":1658,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Gets triggered after onConstructed() is done\n     * @see {@link Neo.core.Base#onConstructed onConstructed}\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[6462,6471],"filename":"Base.mjs","lineno":212,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052230","name":"Base#init","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Gets triggered after onConstructed() is done</p>\n","see":["{@link Neo.core.Base#onConstructed onConstructed}"],"tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"init","longname":"Base#init","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#init","$kind":"method","id":1659,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Applies all class configs to this instance\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     */","meta":{"range":[6688,6878],"filename":"Base.mjs","lineno":219,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052234","name":"Base#initConfig","type":"MethodDefinition","paramnames":["config","preventOriginalConfig"]},"vars":{"":null}},"description":"<p>Applies all class configs to this instance</p>\n","params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Boolean"]},"optional":true,"description":"<p>True prevents the instance from getting an originalConfig property</p>\n","name":"preventOriginalConfig"}],"name":"initConfig","longname":"Base#initConfig","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#initConfig","$kind":"method","id":1660,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Does get triggered with a delay to ensure that Neo.workerId & Neo.worker.Manager are defined\n     * Remote method access via promises\n     */","meta":{"range":[7041,7869],"filename":"Base.mjs","lineno":230,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052263","name":"Base#initRemote","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Does get triggered with a delay to ensure that Neo.workerId &amp; Neo.worker.Manager are defined\nRemote method access via promises</p>\n","name":"initRemote","longname":"Base#initRemote","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#initRemote","$kind":"method","id":1661,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Override this method to change the order configs are applied to this instance.\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     * @returns {Object} config\n     */","meta":{"range":[8154,8549],"filename":"Base.mjs","lineno":259,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052362","name":"Base#mergeConfig","type":"MethodDefinition","paramnames":["config","preventOriginalConfig"]},"vars":{"":null}},"description":"<p>Override this method to change the order configs are applied to this instance.</p>\n","params":[{"type":{"names":["Object"]},"name":"config"},{"type":{"names":["Boolean"]},"optional":true,"description":"<p>True prevents the instance from getting an originalConfig property</p>\n","name":"preventOriginalConfig"}],"returns":[{"type":{"names":["Object"]},"description":"config"}],"name":"mergeConfig","longname":"Base#mergeConfig","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#mergeConfig","$kind":"method","id":1662,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     *\n     */","meta":{"range":[8578,8816],"filename":"Base.mjs","lineno":277,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052415","name":"Base#onAfterConstructed","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"name":"onAfterConstructed","longname":"Base#onAfterConstructed","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#onAfterConstructed","$kind":"method","id":1663,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Gets triggered after all constructors are done\n     * @tutorial 02_ClassSystem\n     */","meta":{"range":[8924,8942],"filename":"Base.mjs","lineno":290,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052442","name":"Base#onConstructed","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Gets triggered after all constructors are done</p>\n","tags":[{"originalTitle":"tutorial","title":"tutorial","text":"02_ClassSystem","value":"02_ClassSystem"}],"name":"onConstructed","longname":"Base#onConstructed","kind":"function","memberof":"Base","scope":"instance","params":[],"$longname":"Base#onConstructed","$kind":"method","id":1664,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Helper method to replace string based values containing \"@config:\" with the matching config value\n     * of this instance.\n     * @param {Object|Object[]} items\n     */","meta":{"range":[9132,10212],"filename":"Base.mjs","lineno":297,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052446","name":"Base#parseItemConfigs","type":"MethodDefinition","paramnames":["items"]},"vars":{"":null}},"description":"<p>Helper method to replace string based values containing &quot;@config:&quot; with the matching config value\nof this instance.</p>\n","params":[{"type":{"names":["Object","Array.<Object>"]},"name":"items"}],"name":"parseItemConfigs","longname":"Base#parseItemConfigs","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#parseItemConfigs","$kind":"method","id":1665,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * When using set(), configs without a trailing underscore can already be assigned,\n     * so the hasOwnProperty() check will return true\n     * @param {Boolean} [forceAssign=false]\n     */","meta":{"range":[10420,11346],"filename":"Base.mjs","lineno":330,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052563","name":"Base#processConfigs","type":"MethodDefinition","paramnames":["forceAssign"]},"vars":{"":null}},"description":"<p>When using set(), configs without a trailing underscore can already be assigned,\nso the hasOwnProperty() check will return true</p>\n","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"name":"forceAssign"}],"name":"processConfigs","longname":"Base#processConfigs","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#processConfigs","$kind":"method","id":1666,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     *\n     * @param {String} className\n     * @param {Object} remote\n     */","meta":{"range":[11438,11899],"filename":"Base.mjs","lineno":357,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052637","name":"Base.sendRemotes","type":"MethodDefinition","paramnames":["className","remote"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"name":"className"},{"type":{"names":["Object"]},"name":"remote"}],"name":"sendRemotes","longname":"Base.sendRemotes","kind":"function","memberof":"Base","scope":"static","$longname":"Base.sendRemotes","$kind":"method","id":1667,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Change multiple configs at once, ensuring that all afterSet methods get all new assigned values\n     * @param {Object} values={}\n     */","meta":{"range":[12057,12524],"filename":"Base.mjs","lineno":377,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052695","name":"Base#set","type":"MethodDefinition","paramnames":["values"]},"vars":{"":null}},"description":"<p>Change multiple configs at once, ensuring that all afterSet methods get all new assigned values</p>\n","params":[{"type":{"names":["Object"]},"defaultvalue":"{}","name":"values"}],"name":"set","longname":"Base#set","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#set","$kind":"method","id":1668,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * Sets the value of a static config by a given key\n     * @param {String} key The key of a staticConfig defined inside static getStaticConfig\n     * @param {*} value\n     * @returns {Boolean} true in case the config exists and got changed\n     */","meta":{"range":[12790,13029],"filename":"Base.mjs","lineno":398,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052745","name":"Base#setStaticConfig","type":"MethodDefinition","paramnames":["key","value"]},"vars":{"":null}},"description":"<p>Sets the value of a static config by a given key</p>\n","params":[{"type":{"names":["String"]},"description":"<p>The key of a staticConfig defined inside static getStaticConfig</p>\n","name":"key"},{"type":{"names":["*"]},"name":"value"}],"returns":[{"type":{"names":["Boolean"]},"description":"true in case the config exists and got changed"}],"name":"setStaticConfig","longname":"Base#setStaticConfig","kind":"function","memberof":"Base","scope":"instance","$longname":"Base#setStaticConfig","$kind":"method","id":1669,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * <p>Enhancing the toString() method, e.g.</p>\n     * `Neo.create('Neo.button.Base').toString() => \"[object Neo.button.Base (neo-button-1)]\"`\n     * @returns {String}\n     */","meta":{"range":[13223,13310],"filename":"Base.mjs","lineno":419,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052776","name":"Base#Symbol.toStringTag","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Enhancing the toString() method, e.g.</p>\n`Neo.create('Neo.button.Base').toString() => \"[object Neo.button.Base (neo-button-1)]\"`","returns":[{"type":{"names":["String"]}}],"name":"toStringTag","longname":"Base#Symbol.toStringTag","kind":"member","memberof":"Base#Symbol","scope":"static","params":[],"$longname":"Base#Symbol.toStringTag","$kind":"property","id":1670,"neoClassName":"Neo.core.Base"},{"comment":"/**\n     * <p>Enhancing the instanceof method. Without this change:</p>\n     * `Neo.collection.Base.prototype instanceof Neo.core.Base => true`\n     * <p>With this change:</p>\n     * `Neo.collection.Base.prototype instanceof Neo.core.Base => false`<br>\n     * `Neo.create(Neo.collection.Base) instanceof Neo.core.Base => true`\n     * @returns {Boolean}\n     */","meta":{"range":[13681,13880],"filename":"Base.mjs","lineno":426,"columnno":4,"path":"/Users/Shared/github/neomjs/pages2/workspace/neo-offscreen-canvas-demo/node_modules/neo.mjs/src/core","code":{"id":"astnode100052793","name":"Base.Symbol.hasInstance","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Enhancing the instanceof method. Without this change:</p>\n`Neo.collection.Base.prototype instanceof Neo.core.Base => true`\n<p>With this change:</p>\n`Neo.collection.Base.prototype instanceof Neo.core.Base => false`<br>\n`Neo.create(Neo.collection.Base) instanceof Neo.core.Base => true`","returns":[{"type":{"names":["Boolean"]}}],"name":"hasInstance","longname":"Base.Symbol.hasInstance","kind":"function","memberof":"Base.Symbol","scope":"static","params":[],"$longname":"Base.Symbol.hasInstance","$kind":"method","id":1671,"neoClassName":"Neo.core.Base"}]}